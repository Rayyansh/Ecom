# Generated by Django 5.1.2 on 2024-10-30 10:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("is_seller", models.BooleanField(default=False)),
                ("is_buyer", models.BooleanField(default=False)),
                (
                    "gender",
                    models.CharField(
                        choices=[("Male", "Male"), ("Female", "Female")], max_length=10
                    ),
                ),
                ("address", models.TextField()),
                ("phone_number", models.CharField(max_length=25)),
                ("country", django_countries.fields.CountryField(max_length=2)),
                ("profile_photo", models.ImageField(upload_to="profile_photos/")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("aadhar_card", models.FileField(upload_to="documents/")),
                (
                    "aadhar_card_expiry_date",
                    models.DateField(help_text="Expiry date of the Aadhaar card"),
                ),
                ("pan_card", models.FileField(upload_to="documents/")),
                (
                    "pan_card_expiry_date",
                    models.DateField(help_text="Expiry date of the Pan card"),
                ),
                ("gst_licence", models.FileField(upload_to="documents/")),
                (
                    "gst_licence_expiry_date",
                    models.DateField(help_text="Expiry date of the G.S.T. Licence"),
                ),
                ("shop_act", models.FileField(upload_to="documents/")),
                (
                    "shop_act_expiry_date",
                    models.DateField(help_text="Expiry date of the Shop Act"),
                ),
                ("trade_licence", models.FileField(upload_to="documents/")),
                (
                    "trade_licence_expiry_date",
                    models.DateField(help_text="Expiry date of the Trade Licence"),
                ),
                ("is_approved", models.BooleanField(default=False)),
                ("rejection_note", models.TextField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Seller",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("business_name", models.CharField(max_length=255)),
                ("registration_number", models.CharField(max_length=100)),
                ("business_type", models.CharField(max_length=255)),
                ("tax_identification_number", models.CharField(max_length=100)),
                ("bank_name", models.CharField(max_length=255)),
                ("bank_account_number", models.CharField(max_length=100)),
                ("bank_ifsc_code", models.CharField(max_length=11)),
                ("bank_branch", models.CharField(max_length=255)),
                ("share_business_name", models.BooleanField(default=False)),
                ("share_address", models.BooleanField(default=False)),
                ("share_gender", models.BooleanField(default=False)),
                ("share_phone_number", models.BooleanField(default=False)),
                ("share_country", models.BooleanField(default=False)),
                ("share_registration_number", models.BooleanField(default=False)),
                ("share_business_type", models.BooleanField(default=False)),
                ("share_tax_identification_number", models.BooleanField(default=False)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["is_seller"], name="adminApp_us_is_sell_601ca9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["is_buyer"], name="adminApp_us_is_buye_ea4a2a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["gender"], name="adminApp_us_gender_f4406c_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["phone_number"], name="adminApp_us_phone_n_a7d6a0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["country"], name="adminApp_us_country_703ccd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["profile_photo"], name="adminApp_us_profile_085b96_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["aadhar_card", "aadhar_card_expiry_date"],
                name="adminApp_do_aadhar__d903db_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["pan_card", "pan_card_expiry_date"],
                name="adminApp_do_pan_car_c995bc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["gst_licence", "gst_licence_expiry_date"],
                name="adminApp_do_gst_lic_9e0cd7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["shop_act", "shop_act_expiry_date"],
                name="adminApp_do_shop_ac_7e46c1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["trade_licence", "trade_licence_expiry_date"],
                name="adminApp_do_trade_l_78df68_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="seller",
            index=models.Index(
                fields=["business_name"], name="adminApp_se_busines_52c119_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="seller",
            index=models.Index(
                fields=["registration_number"], name="adminApp_se_registr_4960b0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="seller",
            index=models.Index(
                fields=["business_type"], name="adminApp_se_busines_30f1c5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="seller",
            index=models.Index(
                fields=["tax_identification_number"],
                name="adminApp_se_tax_ide_d310b0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="seller",
            index=models.Index(
                fields=["bank_name"], name="adminApp_se_bank_na_a479d7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="seller",
            index=models.Index(
                fields=["bank_account_number"], name="adminApp_se_bank_ac_65ce60_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="seller",
            index=models.Index(
                fields=["bank_ifsc_code"], name="adminApp_se_bank_if_6adca3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="seller",
            index=models.Index(
                fields=["bank_branch"], name="adminApp_se_bank_br_90ebf3_idx"
            ),
        ),
    ]
